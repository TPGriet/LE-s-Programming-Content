TASK-7:
---------------------
7a. Write a C programto find sum, average and minimumand maximum in a list of numbers

TEST CASES:
-----------------------------
case = t1
input=
5
2 1 4 5 7
output=	
The sum of elements is: 19

The average of elements is : 3.80

 Minimum element is 1 found at a[1]
 Maximum element is 7 found at a[4]
 
case = t2
input=
4
-1 5 3 -2

output=
The sum of elements is: 5

The average of elements is : 1.25

 Minimum element is -2 found at a[3]
 Maximum element is 5 found at a[1]


PROGRAM:
--------------------
#include<stdio.h>
int main()
{
int a[20],i,n,sum=0,minloc,maxloc;
//printf("\nEnter size of array:");
scanf("%d",&n);
//printf("\nEnter elements of array:\n");
for(i=0;i<n;i++)
{
scanf("%d",&a[i]);
sum+=a[i];
}	
//printf("\nThe entered elements are:\n");
for(i=0;i<n;++i)
printf("%d\t",i[a]);
printf("\nThe sum of elements is: %d\n",sum);
printf("\nThe average of elements is : %.2f\n",(float)sum/n);
minloc=maxloc=0;
for(i=0;i<n;++i)
{
if(a[i]>a[maxloc])
maxloc=i;
if(a[i]<a[minloc])
minloc=i;
}
printf("\n Minimum element is %d found at a[%d]",a[minloc],minloc);
printf("\n Maximum element is %d found at a[%d]",a[maxloc],maxloc);
}

7b. Write a C program to implement Linear search.
TEST CASES:
------------------------
case = t1
input=
5
3 5 6 7 8
6
output=
Search is successful element is found at position 3

case=t2
input=
7
3 1 5 7 8 4 3 
10
output=
Element not found

PROGRAM:
-----------------------
#include<stdio.h>
#include<stdlib.h>
int main()
{
int a[20];
int n,t,i,key,pos;
scanf("%d",&n);
for(i=0;i<n;i++)
scanf("%d",&a[i]);
scanf("%d",&key);
for(i=0;i<n;i++)
{
   if(a[i]==key)
   {
printf("Search is successful element is found at position %d",i+1);
exit(0);
}
}
printf("Element not found");
return 0;  
}

7c. Write a C program to implement Binary search.
TEST CASES:
----------------------------
case = t1
input=
5
3 5 6 7 8
6
output=
Search is successful element is found at position 3

case=t2
input=
7
3 1 5 7 8 4 3 
10
output=
Element not found

PROGRAM:
-------------------------
#include<stdio.h> 
int main()  
{ 	 
 int n, a[30], item, i, j, mid, start, end,flag=0; 
 //printf("Enter how many elements you want:\n"); 
   scanf("%d", &n); 
 //printf("Enter the %d elements in ascending order\n", n); 
 for (i = 0; i < n; i++) 
 { 
  scanf("%d", &a[i]); 
 } 
 //printf("\nEnter the item to  search\n"); 
 scanf("%d", &item); 
 start = 0;  
 end = n-1; 
 while(start<=end) 
 {   
     mid = (start+ end) / 2;   
    if (item < a[mid])  //lower half   
    end = mid - 1;   
    else if (item > a[mid])    
    start = mid + 1; 
    else if (item == a[mid]) 
   {  
    flag=1;  
    break; 
  }
} 
  if(flag==1) 
  { 
    printf("Search is successful element is found at position %d",mid+1); 
  }   
    else 
   { 
     printf("\nElement not found"); 
   }
    return 0; 
} 

TASK-8:
--------------------
8a.Write a C program to implement matrix addition.

Input Format: Read the input matrix as integer based on dimension given in test cases.
(first line the number of elements in matrix, second line first matrix elements
third line second matrix elements)
Output Format :print resultant matrix is or print addition is not possible if matrix dimension is not same.

Test Case Example:
----------------------
Case = t1
Input = 2 2 2 2
1 2 6 5
6 5 8 9
output = resultant matrix is:
7 7
14 14

Case = t2
Input = 3 3 3 3
10 20 10 4 5 6 2 3 5
3 2 4 3 3 9 4 4 2
output = resultant matrix is:
13 22 14 
7 8 15 
6 7 7

Case = t3
Input = 2 3 2 3
2 3 4 5 2 3
-4 5 3 5 6 3
output = resultant matrix is:
-2 8 7
10 8 6
   
Case = t4
Input = 2 3 3 3
output = addition is not possible

PROGRAM:
---------------------------
#include<stdio.h> 
int main()
{ 
int r1,r2,c1,c2,i,j,a[10][10],b[10][10],c[10][10]; 
//printf("\n Enter r1,c1,r2,c2\n"); 
scanf("%d %d %d %d",&r1,&c1,&r2,&c2);
 if(r1==r2&&c1==c2) 
{ 
//printf("enter matrix A elements\n");
for(i=0;i<r1;i++) 
{ 
for(j=0;j<c1;j++)
 { 
   scanf("%d",&a[i][j]); 
 } 
} 
//printf("Enter matrix B elements\n"); 
for(i=0;i<r2;i++)
 {
 for(j=0;j<c2;j++) 
{ 
scanf("%d",&b[i][j]); 
}
 } 
 for(i=0;i<r1;i++) 
 {
     for(j=0;j<c1;j++)
     { 
       c[i][j]=a[i][j]+b[i][j]; 
     } 
 } 
printf("resultant matrix is:\n"); 
 for(i=0;i<r1;i++) 
 { 
    for(j=0;j<c1;j++) 
        { 
            printf("\t%d",c[i][j]); 
        }        
        printf("\n"); 
 } 
} 
else 
printf("addition is not possible"); 
} 
 
 8b. Write a C program to implement matrix addition.

Input Format: Read the input matrix as integer based on dimension given in test cases. 
(first line the number of elements in matrix, second line first matrix elements
third line second matrix elements)
Output Format :print resultant matrix is or print multiplication is not possible if matrix dimension is not same.

TEST CASES:
--------------------------
ICase = t1
Input = 2 2 2 2
1 2 3 4
1 2 3 4
output = resultant matrix is:
7 10
15 22

Case = t2
Input = 3 3 3 3
1 1 1 2 2 2 3 3 3
1 1 1 2 2 2 3 3 3
output = resultant matrix is:
6 6 6 
12 12 12 
18 18 18

Case = t3
Input = 2 3 2 3
output = Matrix multiplication is not possible
   
Case = t4
Input = 2 3 3 3
2 3 4 1 2 5
1 4 3 2 1 3 5 2 1
output = resultant matrix is:
28 19 19
30 16 14


PROGRAM:
-----------------------------------
#include<stdio.h> 
int main()
{ 
   int r1,r2,c1,c2,i,j,k,a[10][10],b[10][10],c[10][10]; 
   //printf("\n Enter r1,c1,r2,c2\n"); 
    scanf("%d %d %d %d",&r1,&c1,&r2,&c2); 
   if(c1==r2) 
   { 
     //printf("enter matrix A elements\n"); 
     for(i=0;i<r1;i++) 
     { 
         for(j=0;j<c1;j++) 
        { 
          scanf("%d",&a[i][j]); 
        } 
      } 
    //printf("Enter matrix B elements\n"); 
     for(i=0;i<r2;i++)
      { 
          for(j=0;j<c2;j++) 
          { 
            scanf("%d",&b[i][j]); 
          } 
      } 
       for(i=0;i<r1;i++) 
        { 
            for(j=0;j<c2;j++) 
               {            
                  c[i][j]=0;                
                  for(k=0;k<r2;k++) 
                    { 
                       c[i][j]=c[i][j]+a[i][k]*b[k][j]; 
                    } 
               } 
        }
            printf("resultant matrix is:\n");
            for(i=0;i<r1;i++) 
            { 
                for(j=0;j<c2;j++)
                 { 
                  printf("\t%d",c[i][j]); 
                }
                   printf("\n"); 
            } 
        } 
          else 
           printf("Matrix multiplication is not possible"); 
    } 
 


 
