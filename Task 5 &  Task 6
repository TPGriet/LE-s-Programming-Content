TASK- 5:
------------------------
5a. Write a C Program check whether a given number is Perfect number or not. 
Test Cases:
-----------------------
case=t1
input=
12
output=
12 is not a Perfect Number

case=t2
input=
28
output=
28 is a Perfect Number

case=t3
input=
145
output=
145 is not a Perfect Number


PROGRAM:
-----------------------
#include<stdio.h>
void main()
{
  int n, sum=0, i=1;
  scanf("%d",&n);
  while(i<n)
  {
   if(n%i==0)
    {
     sum=sum+i;
    }
    i++;
  }
  if(sum==n)
   printf("%d is a perfect number",i);
  else
   printf("%d is not a perfect number",i);
}

5b.  Write a C Program check whether a given number is Palindrome number or not.
Test Cases:
--------------------------
case=t1
input=
121
output=
121 is a palindrome

case=t2
input=
111
output=
111 is a palindrome

case=t3
input=
123
output=
123 is not a palindrome

case=t4
input=
1515151
output=
1515151 is a palindrome

case=t5
input=
23123
output=
23123 is not a palindrome

PROGRAM:
----------------------------
#include<stdio.h>
#include<math.h>
void main()
{
int num,rem,m,rev=0;
scanf("%d",&num);
m=num;
while(m!=0)
{
rem=m%10;
rev=rem+rev*10;
m=m/10;
}
if(num==rev)
{
printf("%d is a palindrome",num);
}
else
{
printf("%d is not a palindrome",num);
}
}

5c.  Write a C Program check whether a given number is Armstrong number or not. 
Note:enter input 3 digit number only 
Test Cases:
--------------------------
case=t1
input=
371
output=
371 is an Armstrong Number

case=t2
input=
111
output=
111 is not an Armstrong Number

case=t3
input=
153
output=
153 is an Armstrong Number

case=t4
input=
234
output=
234 is not an Armstrong Number

case=t5
input=
407
output=
407 is an Armstrong Number

PROGRAM:
-------------------------
#include<stdio.h>
void main()
{
   int num,x,sum=0,rem;
   scanf("%d",&num);
   x = num;
   while (num != 0)
   {
      rem = num % 10;
      sum = sum + (rem*rem*rem);
      num = num / 10;
   }
   if(x == sum)
      printf("%d is an Armstrong Number",x);
   else
      printf("%d is not an Armstrong Number",x);
}

5d.  Write a C Program check whether a given number is Strong number or not 
Test Cases:
---------------------
case=t1
input=
1
output=
1 is a strong number

case=t2
input=
2
output=
2 is a strong number

case=t3
input=
145
output=
145 is a strong number

case=t4
input=
40585
output=
40585 is a strong number


case=t5
input=
123
output=
123 is not a strong number

PROGRAM:
----------------------------
#include<stdio.h>
#include<math.h>
void main( )
{
int n,sum=0,f,i,r,temp;
scanf("%d",&n);
temp=n;
while(n!=0)
{
    r=n%10;
    f=1;
    for(i=1;i<=r;i++)
    f=f*i;
    n=n/10;
    sum=sum+f;
}
if(temp==sum)
printf("%d is a strong number",temp);
else
printf("%d is not a strong number",temp);
}


TASK-6:
--------------------
6a .  Write a C program to display the following patterns.
i) ****
   *  *
   *  *
   **** 

Test Cases:
---------------------
case=t1
input=5
output=

*****
*   *
*   *
*   *
*****


case=t2
input=5
output=

*******
*     *
*     *
*     *
*     *
*     *
*******


case=t3
input=
10
output=

**********
*        *
*        *
*        *
*        *
*        *
*        *
*        *
*        *
**********

PROGRAM:
------------------------
#include <stdio.h>
     int main()
{
    int i, j, N;
    scanf("%d", &N);
    for(i=1; i<=N; i++)
    {
        
        for(j=1; j<=N; j++)
        {
            if(i==1 || i==N || j==1 || j==N)
            {

                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
                printf("\n");
    }

    return 0;
}

 
6a ii .  Write a C program to display the following patterns.

ii)        1
         2   3
       4   5   6
     7   8   9  10

Test Cases:
-------------------------
case=t1
input=5
output=
           1
         2   3
       4   5   6
     7   8   9  10
  11  12  13  14  15


case=t2
input=7
output=
               1
             2   3
           4   5   6
         7   8   9  10
      11  12  13  14  15
    16  17  18  19  20  21
  22  23  24  25  26  27  28


case=t3
input=3
output=
       1
     2   3
   4   5   6


PROGRAM:
-----------------------------------
#include<stdio.h>
int main()
{
int n,i,j,k=1,space;
scanf("%d",&n);

for(i=1;i<=n;i++) 
 {
    for(space=1;space<=n-i;space++)
    {
        printf("  ");
    }
     for(j=1;j<=i;j++) 
    {
        printf("%4d",k++); 
    }
  printf("\n");
 }
}

6a iii .  Write a C program to display the following patterns.

iii)  1 
      2 2 
      3 3 3 
      4 4 4 4 
      

Test Cases:
-----------------------
case=t1
input=3
output=
1 
2 2 
3 3 3 


case=t2
input=
111
6
output=
1 
2 2 
3 3 3 
4 4 4 4 
5 5 5 5 5 
6 6 6 6 6 6 


case=t3
input=
7
output=
1 
2 2 
3 3 3 
4 4 4 4 
5 5 5 5 5 
6 6 6 6 6 6 
7 7 7 7 7 7 7 

PROGRAM:
--------------------------
#include<stdio.h>
int main()
{
 int i,j,n;
 scanf("%d",&n);
 for(i=0;i<=n;i++)
 {
  for(j=1;j<=i;j++)
  {
 printf("%d ",i);
  } 
 printf("\n");
 }
}

6b. write a c program to generate the prime numbers between x and y where x and y are starting and ending values to be supplied by the user.

Test Cases:
-------------------
case = t1
input=
1 100
output=
2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 

case = t2
input=10 20
output=
11 13 17 19 

case = t3
input=
40 50
output=
41 43 47 

PROGRAM:
---------------------------
#include<stdio.h>
int main()
{
int n,i,j,count,x,y;
scanf("%d%d",&x,&y);
for(i=x;i<=y;i++)
 {
    count=1;
    for(j=2;j<=i;j++)
    {	
        if(i%j==0)
        count++;
    }
    if(count==2)
    printf("%d ",i);
 }
}

6c. Write a C program to calculate the sum of following series: 
	S1=1+x^1/1!-x^2 /2!+x^3/3!-x^4/4!+â€¦..x^n/n! 

Test Cases:
-----------------------------------
case=t1
input= 2 3
output=
S1=2.50

case=t2
input= 4 3
output=
S1=1.38

case=t3
input= -1 3
output=
S1=1.00

PROGRAM:
----------------------
#include <stdio.h>
#include <math.h>
int main (void)
{    int n, x;
    double fact;
    double  sum;
    int i, j;
    scanf ("%d", &n);
    scanf ("%d", &x);
    sum = 1;
    fact = 1;
    for (i = 1; i <= n; i++)
    {
        fact = 1;
        for (j = 1; j <= i; j++)
            fact = fact * j;
        sum = sum + pow (-x, i) / fact;
    }  
    printf("S1=%.2lf", sum);   
    return 0;
}


